#!/usr/bin/env tarantool
---
...
-- init shard, fill spaces
-- -----------------------
env = require('test_run')
---
...
test_run = env.new()
---
...
shard = require('shard')
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
SERVERS = {'shard1', 'shard2'};
---
...
init_shard(SERVERS, {
    servers = {
        { uri = instance_uri('1'), zone = '0' },
        { uri = instance_uri('2'), zone = '1' },
    },
    login = 'guest',
    password = '',
    redundancy = 1,
}, 'shard_no_redundancy');
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
fill_test_data()
---
...
-- graphql queries
-- ---------------
fio = require('fio')
---
...
-- require in-repo version of graphql/ sources despite current working directory
package.path = fio.abspath(debug.getinfo(1).source:match("@?(.*/)"):gsub('/./', '/'):gsub('/+$', '')) .. '/../../?.lua' .. ';' .. package.path
---
...
json = require('json')
---
...
yaml = require('yaml')
---
...
graphql = require('graphql')
---
...
metadata = get_test_metadata()
---
...
schemas = metadata.schemas
---
...
collections = metadata.collections
---
...
service_fields = metadata.service_fields
---
...
indexes = metadata.indexes
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
accessor = graphql.accessor_shard.new({
    schemas = schemas,
    collections = collections,
    service_fields = service_fields,
    indexes = indexes,
});
---
...
gql_wrapper = graphql.new({
    schemas = schemas,
    collections = collections,
    accessor = accessor,
});
---
...
query_1 = [[
    query user_by_order($order_id: String) {
        order_collection(order_id: $order_id) {
            order_id
            description
            user_connection {
                user_id
                last_name
                first_name
            }
        }
    }
]];
---
...
variables_1 = {order_id = 'order_id_1'};
---
...
gql_query_1 = gql_wrapper:compile(query_1);
---
...
gql_query_1:execute(variables_1);
---
- order_collection:
  - order_id: order_id_1
    description: first order of Ivan
    user_connection:
      user_id: user_id_1
      last_name: Ivanov
      first_name: Ivan
...
query_2 = [[
    query user_order($user_id: String, $first_name: String, $limit: Int,
            $offset: Long) {
        user_collection(user_id: $user_id, first_name: $first_name) {
            user_id
            last_name
            first_name
            order_connection(limit: $limit, offset: $offset) {
                order_id
                description
            }
        }
    }
]];
---
...
gql_query_2 = gql_wrapper:compile(query_2);
---
...
variables_2 = {user_id = 'user_id_1'};
---
...
gql_query_2:execute(variables_2);
---
- user_collection:
  - user_id: user_id_1
    last_name: Ivanov
    first_name: Ivan
    order_connection:
    - order_id: order_id_1
      description: first order of Ivan
    - order_id: order_id_2
      description: second order of Ivan
...
variables_2_2 = {user_id = 'user_id_42', limit = 10, offset = 10};
---
...
gql_query_2:execute(variables_2_2);
---
- user_collection:
  - user_id: user_id_42
    last_name: last name 42
    first_name: first name 42
    order_connection:
    - order_id: order_id_1574
      description: order of user 42
    - order_id: order_id_1575
      description: order of user 42
    - order_id: order_id_1576
      description: order of user 42
    - order_id: order_id_1577
      description: order of user 42
    - order_id: order_id_1578
      description: order of user 42
    - order_id: order_id_1579
      description: order of user 42
    - order_id: order_id_1580
      description: order of user 42
    - order_id: order_id_1581
      description: order of user 42
    - order_id: order_id_1582
      description: order of user 42
    - order_id: order_id_1583
      description: order of user 42
...
variables_2_3 = {user_id = 'user_id_42', limit = 10, offset = 38};
---
...
gql_query_2:execute(variables_2_3);
---
- user_collection:
  - user_id: user_id_42
    last_name: last name 42
    first_name: first name 42
    order_connection:
    - order_id: order_id_1602
      description: order of user 42
    - order_id: order_id_1603
      description: order of user 42
...
variables_2_4 = {
    first_name = 'first name 42',
    limit = 3,
    offset = 39,
};
---
...
gql_query_2:execute(variables_2_4);
---
- user_collection:
  - user_id: user_id_42
    last_name: last name 42
    first_name: first name 42
    order_connection:
    - order_id: order_id_1603
      description: order of user 42
...
-- no limit, no offset
variables_2_5 = {user_id = 'user_id_42'};
---
...
gql_query_2:execute(variables_2_5);
---
- user_collection:
  - user_id: user_id_42
    last_name: last name 42
    first_name: first name 42
    order_connection:
    - order_id: order_id_1564
      description: order of user 42
    - order_id: order_id_1565
      description: order of user 42
    - order_id: order_id_1566
      description: order of user 42
    - order_id: order_id_1567
      description: order of user 42
    - order_id: order_id_1568
      description: order of user 42
    - order_id: order_id_1569
      description: order of user 42
    - order_id: order_id_1570
      description: order of user 42
    - order_id: order_id_1571
      description: order of user 42
    - order_id: order_id_1572
      description: order of user 42
    - order_id: order_id_1573
      description: order of user 42
    - order_id: order_id_1574
      description: order of user 42
    - order_id: order_id_1575
      description: order of user 42
    - order_id: order_id_1576
      description: order of user 42
    - order_id: order_id_1577
      description: order of user 42
    - order_id: order_id_1578
      description: order of user 42
    - order_id: order_id_1579
      description: order of user 42
    - order_id: order_id_1580
      description: order of user 42
    - order_id: order_id_1581
      description: order of user 42
    - order_id: order_id_1582
      description: order of user 42
    - order_id: order_id_1583
      description: order of user 42
    - order_id: order_id_1584
      description: order of user 42
    - order_id: order_id_1585
      description: order of user 42
    - order_id: order_id_1586
      description: order of user 42
    - order_id: order_id_1587
      description: order of user 42
    - order_id: order_id_1588
      description: order of user 42
    - order_id: order_id_1589
      description: order of user 42
    - order_id: order_id_1590
      description: order of user 42
    - order_id: order_id_1591
      description: order of user 42
    - order_id: order_id_1592
      description: order of user 42
    - order_id: order_id_1593
      description: order of user 42
    - order_id: order_id_1594
      description: order of user 42
    - order_id: order_id_1595
      description: order of user 42
    - order_id: order_id_1596
      description: order of user 42
    - order_id: order_id_1597
      description: order of user 42
    - order_id: order_id_1598
      description: order of user 42
    - order_id: order_id_1599
      description: order of user 42
    - order_id: order_id_1600
      description: order of user 42
    - order_id: order_id_1601
      description: order of user 42
    - order_id: order_id_1602
      description: order of user 42
    - order_id: order_id_1603
      description: order of user 42
...
query_3 = [[
    query users($limit: Int, $offset: Long) {
        user_collection(limit: $limit, offset: $offset) {
            user_id
            last_name
            first_name
        }
    }
]];
---
...
variables_3 = {limit = 10, offset = 50};
---
...
gql_query_3 = gql_wrapper:compile(query_3);
---
...
gql_query_3:execute(variables_3);
---
- user_collection:
  - user_id: user_id_54
    last_name: last name 54
    first_name: first name 54
  - user_id: user_id_55
    last_name: last name 55
    first_name: first name 55
  - user_id: user_id_56
    last_name: last name 56
    first_name: first name 56
  - user_id: user_id_57
    last_name: last name 57
    first_name: first name 57
  - user_id: user_id_58
    last_name: last name 58
    first_name: first name 58
  - user_id: user_id_59
    last_name: last name 59
    first_name: first name 59
  - user_id: user_id_6
    last_name: last name 6
    first_name: first name 6
  - user_id: user_id_60
    last_name: last name 60
    first_name: first name 60
  - user_id: user_id_61
    last_name: last name 61
    first_name: first name 61
  - user_id: user_id_62
    last_name: last name 62
    first_name: first name 62
...
-- extra filter for 1:N connection
-- -------------------------------
query_4 = [[
    query user_order($first_name: String, $description: String) {
        user_collection(first_name: $first_name) {
            user_id
            last_name
            first_name
            order_connection(description: $description) {
                order_id
                description
            }
        }
    }
]];
---
...
gql_query_4 = gql_wrapper:compile(query_4);
---
...
-- should match 1 order
variables_4_1 = {
    first_name = 'Ivan',
    description = 'first order of Ivan',
};
---
...
gql_query_4:execute(variables_4_1);
---
- user_collection:
  - user_id: user_id_1
    last_name: Ivanov
    first_name: Ivan
    order_connection:
    - order_id: order_id_1
      description: first order of Ivan
...
-- should match no orders
variables_4_2 = {
    first_name = 'Ivan',
    description = 'non-existent order',
};
---
...
gql_query_4:execute(variables_4_2);
---
- user_collection:
  - user_id: user_id_1
    last_name: Ivanov
    first_name: Ivan
    order_connection: []
...
-- extra filter for 1:1 connection;
-- -------------------------------;
query_5 = [[
    query user_by_order($first_name: String, $description: String) {
        order_collection(description: $description) {
            order_id
            description
            user_connection(first_name: $first_name) {
                user_id
                last_name
                first_name
            }
        }
    }
]];
---
...
gql_query_5 = gql_wrapper:compile(query_5);
---
...
-- should match 1 user;
variables_5_1 = {
    first_name = 'Ivan',
    description = 'first order of Ivan',
};
---
...
gql_query_5:execute(variables_5_1);
---
- order_collection:
  - order_id: order_id_1
    description: first order of Ivan
    user_connection:
      user_id: user_id_1
      last_name: Ivanov
      first_name: Ivan
...
-- should match no users (or give an error?);
--variables_5_2 = {
--    first_name = 'non-existent user',
--    description = 'first order of Ivan',
--};
--gql_query_5:execute(variables_5_2);
test_run:cmd("setopt delimiter ''");
---
- true
...
-- stop shards
-- -----------
test_run:drop_cluster(SERVERS)
---
...
